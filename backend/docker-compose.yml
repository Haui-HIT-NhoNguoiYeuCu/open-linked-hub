version: "3.9"

services:
  # 1. MongoDB Database
  mongo-db:
    image: mongo:latest
    container_name: openlinkedhub-mongo
    ports: ["27017:27017"]
    volumes: [mongo-data:/data/db]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks: [openlinkedhub-backend-net]

  # 2. Redis Cache (OSS BSD-3-Clause)
  redis:
    image: redis:7.2.4-alpine
    container_name: openlinkedhub-redis
    ports: ["6379:6379"]
    networks: [openlinkedhub-backend-net]

  # 3. Kafka (Apache official, KRaft mode - không cần ZooKeeper)
  kafka:
    image: apache/kafka:4.1.0
    container_name: openlinkedhub-kafka
    ports: ["9092:9092"]
    environment:
      # KRaft (single node)
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093

      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

      # Listeners: external 9092, internal 29092, controller 9093
      KAFKA_LISTENERS: PLAINTEXT://:9092,INTERNAL://:29092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      # Tối ưu cho môi trường dev/1 broker
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks: [openlinkedhub-backend-net]

  # 4. Database PostgreSQL cho Auth Service
  auth-db:
    image: postgres:16
    container_name: openlinkedhub-auth-postgres
    ports: ["5433:5432"]
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth_db
    networks: [openlinkedhub-backend-net]
    volumes: [auth-db-data:/var/lib/postgresql/data]

  # --- Dịch vụ ứng dụng ---

  # Auth Service
  # auth-service:
  #   build: { context: ./auth-service }
  #   container_name: auth-service
  #   ports: ["8083:8083"]
  #   depends_on: [auth-db]
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/auth_db
  #     - SPRING_DATASOURCE_USERNAME=auth_user
  #     - SPRING_DATASOURCE_PASSWORD=auth_password
  #   networks: [openlinkedhub-backend-net]

  # Dataset Service
  # dataset-service:
  #   build: { context: ./dataset-service }
  #   container_name: dataset-service
  #   ports: ["8081:8081"]
  #   depends_on: [mongo-db, redis, kafka]
  #   environment:
  #     - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongo-db:27017/openlinkedhub_db?authSource=admin
  #     - SPRING_DATA_REDIS_HOST=redis
  #     - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
  #   networks: [openlinkedhub-backend-net]

networks:
  openlinkedhub-backend-net: { driver: bridge }

volumes:
  mongo-data:
  auth-db-data:
